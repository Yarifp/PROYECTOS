//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Presupuesto
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MODIFICACION_PRESUPUESTOEntities : DbContext
    {
        public MODIFICACION_PRESUPUESTOEntities()
            : base("name=MODIFICACION_PRESUPUESTOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cat_Departamentos> Cat_Departamentos { get; set; }
        public virtual DbSet<Cat_Estado_Solicitud> Cat_Estado_Solicitud { get; set; }
        public virtual DbSet<Cat_Estado_Usuario> Cat_Estado_Usuario { get; set; }
        public virtual DbSet<Cat_Partidas> Cat_Partidas { get; set; }
        public virtual DbSet<Cat_Periodo_Modificaciones> Cat_Periodo_Modificaciones { get; set; }
        public virtual DbSet<Cat_Roles> Cat_Roles { get; set; }
        public virtual DbSet<Cat_Solicitudes> Cat_Solicitudes { get; set; }
        public virtual DbSet<Empleados> Empleados { get; set; }
        public virtual DbSet<Historico> Historico { get; set; }
        public virtual DbSet<Partidas_Asignadas> Partidas_Asignadas { get; set; }
        public virtual DbSet<Solicitudes> Solicitudes { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Ver_Cod_Partidas_Asignadas> Ver_Cod_Partidas_Asignadas { get; set; }
        public virtual DbSet<Ver_Historico> Ver_Historico { get; set; }
        public virtual DbSet<Ver_Solicitudes> Ver_Solicitudes { get; set; }
    
        public virtual int Act_Roles(Nullable<int> idEmpleado, Nullable<int> idRol)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Act_Roles", idEmpleadoParameter, idRolParameter);
        }
    
        public virtual int Aprobar_Solicitud(Nullable<int> idSolicitud, Nullable<int> idResponsable)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("idResponsable", idResponsable) :
                new ObjectParameter("idResponsable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Aprobar_Solicitud", idSolicitudParameter, idResponsableParameter);
        }
    
        public virtual int Asig_Presupuesto_Partida(Nullable<int> idDepto, string cod_Partida, Nullable<decimal> monto_asignado)
        {
            var idDeptoParameter = idDepto.HasValue ?
                new ObjectParameter("idDepto", idDepto) :
                new ObjectParameter("idDepto", typeof(int));
    
            var cod_PartidaParameter = cod_Partida != null ?
                new ObjectParameter("Cod_Partida", cod_Partida) :
                new ObjectParameter("Cod_Partida", typeof(string));
    
            var monto_asignadoParameter = monto_asignado.HasValue ?
                new ObjectParameter("Monto_asignado", monto_asignado) :
                new ObjectParameter("Monto_asignado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Asig_Presupuesto_Partida", idDeptoParameter, cod_PartidaParameter, monto_asignadoParameter);
        }
    
        public virtual int Bloquer_Usuario(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bloquer_Usuario", usuarioParameter);
        }
    
        public virtual int Definir_Periodo_Modificaciones(Nullable<System.DateTime> fecha_Apertura, Nullable<System.DateTime> fecha_Cierre)
        {
            var fecha_AperturaParameter = fecha_Apertura.HasValue ?
                new ObjectParameter("Fecha_Apertura", fecha_Apertura) :
                new ObjectParameter("Fecha_Apertura", typeof(System.DateTime));
    
            var fecha_CierreParameter = fecha_Cierre.HasValue ?
                new ObjectParameter("Fecha_Cierre", fecha_Cierre) :
                new ObjectParameter("Fecha_Cierre", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Definir_Periodo_Modificaciones", fecha_AperturaParameter, fecha_CierreParameter);
        }
    
        public virtual int Desbloquer_Usuario(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Desbloquer_Usuario", usuarioParameter);
        }
    
        public virtual int Ingresar_Categoria_Solicitudes(string categoria)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Categoria_Solicitudes", categoriaParameter);
        }
    
        public virtual int Ingresar_Departamentos(string nombre, Nullable<decimal> presupuesto_autorizado, Nullable<decimal> presupuesto_asignado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var presupuesto_autorizadoParameter = presupuesto_autorizado.HasValue ?
                new ObjectParameter("Presupuesto_autorizado", presupuesto_autorizado) :
                new ObjectParameter("Presupuesto_autorizado", typeof(decimal));
    
            var presupuesto_asignadoParameter = presupuesto_asignado.HasValue ?
                new ObjectParameter("Presupuesto_asignado", presupuesto_asignado) :
                new ObjectParameter("Presupuesto_asignado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Departamentos", nombreParameter, presupuesto_autorizadoParameter, presupuesto_asignadoParameter);
        }
    
        public virtual int Ingresar_Empleados(string nombre, string primer_Apellido, string segundo_Apellido, string correo_Electronico, Nullable<int> idDepto, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primer_ApellidoParameter = primer_Apellido != null ?
                new ObjectParameter("Primer_Apellido", primer_Apellido) :
                new ObjectParameter("Primer_Apellido", typeof(string));
    
            var segundo_ApellidoParameter = segundo_Apellido != null ?
                new ObjectParameter("Segundo_Apellido", segundo_Apellido) :
                new ObjectParameter("Segundo_Apellido", typeof(string));
    
            var correo_ElectronicoParameter = correo_Electronico != null ?
                new ObjectParameter("Correo_Electronico", correo_Electronico) :
                new ObjectParameter("Correo_Electronico", typeof(string));
    
            var idDeptoParameter = idDepto.HasValue ?
                new ObjectParameter("idDepto", idDepto) :
                new ObjectParameter("idDepto", typeof(int));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("idRol", idRol) :
                new ObjectParameter("idRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Empleados", nombreParameter, primer_ApellidoParameter, segundo_ApellidoParameter, correo_ElectronicoParameter, idDeptoParameter, idRolParameter);
        }
    
        public virtual int Ingresar_Estado_Solicitud(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Estado_Solicitud", nombreParameter);
        }
    
        public virtual int Ingresar_Estado_Usuarios(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Estado_Usuarios", estadoParameter);
        }
    
        public virtual int Ingresar_Partidas(string codigo, string nombre)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Partidas", codigoParameter, nombreParameter);
        }
    
        public virtual int Ingresar_Roles(string rol)
        {
            var rolParameter = rol != null ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Roles", rolParameter);
        }
    
        public virtual int Ingresar_Tipo_Solicitud(string tipo)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ingresar_Tipo_Solicitud", tipoParameter);
        }
    
        public virtual int Rechazar_Solicitud(Nullable<int> idSolicitud, Nullable<int> idResponsable)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("idResponsable", idResponsable) :
                new ObjectParameter("idResponsable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rechazar_Solicitud", idSolicitudParameter, idResponsableParameter);
        }
    
        public virtual int Solicitar_Modificacion(Nullable<int> idTipo, Nullable<int> idSolicitante, Nullable<int> idPeriodo, Nullable<int> idDepto_Ori, string cod_Partida_Ori, Nullable<int> idDepto_Dest, string cod_Partida_Dest, Nullable<decimal> monto_solicitado)
        {
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var idSolicitanteParameter = idSolicitante.HasValue ?
                new ObjectParameter("idSolicitante", idSolicitante) :
                new ObjectParameter("idSolicitante", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("idPeriodo", idPeriodo) :
                new ObjectParameter("idPeriodo", typeof(int));
    
            var idDepto_OriParameter = idDepto_Ori.HasValue ?
                new ObjectParameter("idDepto_Ori", idDepto_Ori) :
                new ObjectParameter("idDepto_Ori", typeof(int));
    
            var cod_Partida_OriParameter = cod_Partida_Ori != null ?
                new ObjectParameter("Cod_Partida_Ori", cod_Partida_Ori) :
                new ObjectParameter("Cod_Partida_Ori", typeof(string));
    
            var idDepto_DestParameter = idDepto_Dest.HasValue ?
                new ObjectParameter("idDepto_Dest", idDepto_Dest) :
                new ObjectParameter("idDepto_Dest", typeof(int));
    
            var cod_Partida_DestParameter = cod_Partida_Dest != null ?
                new ObjectParameter("Cod_Partida_Dest", cod_Partida_Dest) :
                new ObjectParameter("Cod_Partida_Dest", typeof(string));
    
            var monto_solicitadoParameter = monto_solicitado.HasValue ?
                new ObjectParameter("Monto_solicitado", monto_solicitado) :
                new ObjectParameter("Monto_solicitado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Solicitar_Modificacion", idTipoParameter, idSolicitanteParameter, idPeriodoParameter, idDepto_OriParameter, cod_Partida_OriParameter, idDepto_DestParameter, cod_Partida_DestParameter, monto_solicitadoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int User_Pass(Nullable<int> len, Nullable<byte> min, Nullable<byte> range, string exclude, ObjectParameter output)
        {
            var lenParameter = len.HasValue ?
                new ObjectParameter("len", len) :
                new ObjectParameter("len", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(byte));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("range", range) :
                new ObjectParameter("range", typeof(byte));
    
            var excludeParameter = exclude != null ?
                new ObjectParameter("exclude", exclude) :
                new ObjectParameter("exclude", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User_Pass", lenParameter, minParameter, rangeParameter, excludeParameter, output);
        }
    }
}
